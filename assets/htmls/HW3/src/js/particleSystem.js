"use strict";var App=App||{};const ParticleSystem=function(){function e(e){if(-.8==e)for(var t=0;t<i.geometry.vertices.length;t++){var r=o.data[t].concentration;i.geometry.vertices[t].y>=e&&(r<1e-4?i.geometry.colors[t].set("#f7fcfd"):r<.001?i.geometry.colors[t].set("#e0ecf4"):r<.01?i.geometry.colors[t].set("#bfd3e6"):r<.1?i.geometry.colors[t].set("#9ebcda"):r<0?i.geometry.colors[t].set("#8c96c6"):r<1?i.geometry.colors[t].set("#8c6bb1"):r<10?i.geometry.colors[t].set("#88419d"):r<20?i.geometry.colors[t].set("#810f7c"):i.geometry.colors[t].set("#4d004b"))}else for(t=0;t<i.geometry.vertices.length;t++){r=o.data[t].concentration;i.geometry.vertices[t].y>=e-.2&&i.geometry.vertices[t].y<=e+.2?r<1e-4?i.geometry.colors[t].set("#f7fcfd"):r<.001?i.geometry.colors[t].set("#e0ecf4"):r<.01?i.geometry.colors[t].set("#bfd3e6"):r<.1?i.geometry.colors[t].set("#9ebcda"):r<0?i.geometry.colors[t].set("#8c96c6"):r<1?i.geometry.colors[t].set("#8c6bb1"):r<10?i.geometry.colors[t].set("#88419d"):r<20?i.geometry.colors[t].set("#810f7c"):i.geometry.colors[t].set("#4d004b"):r<1e-4?i.geometry.colors[t].set("#f0f0f0"):r<.001?i.geometry.colors[t].set("#d9d9d9"):r<.01?i.geometry.colors[t].set("#d9d9d9"):r<.1?i.geometry.colors[t].set("#bdbdbd"):r<0?i.geometry.colors[t].set("#969696"):r<1?i.geometry.colors[t].set("#737373"):r<10?i.geometry.colors[t].set("#525252"):r<20?i.geometry.colors[t].set("#252525"):i.geometry.colors[t].set("#000000")}i.geometry.colorsNeedUpdate=!0}const o=this;o.data=[];const t=new THREE.Group,r=new dat.GUI,n={};var s,c,i,a;return o.createSliceSystem=function(e){for(var r=d3.select(".particleDiv").node().clientWidth/60,n=new THREE.PlaneGeometry(12,12),i=new THREE.MeshBasicMaterial({color:"#ffffff"}),a=new THREE.Geometry,l=new THREE.PointsMaterial({sizeAttenuation:!1,vertexColors:!0}),d=0;d<o.data.length;d++)if(o.data[d].Y>=e&&o.data[d].Y<e+.5){var m=o.data[d].X,y=(o.data[d].Y,o.data[d].Z),E=new THREE.Vector3(m,-y,2),f=o.data[d].concentration;f<1e-4?a.colors.push(new THREE.Color("#f7fcfd")):f<.001?a.colors.push(new THREE.Color("#e0ecf4")):f<.01?a.colors.push(new THREE.Color("#bfd3e6")):f<.1?a.colors.push(new THREE.Color("#9ebcda")):f<0?a.colors.push(new THREE.Color("#8c96c6")):f<1?a.colors.push(new THREE.Color("#8c6bb1")):f<10?a.colors.push(new THREE.Color("#88419d")):f<20?a.colors.push(new THREE.Color("#810f7c")):a.colors.push(new THREE.Color("#4d004b")),a.vertices.push(E)}(c=new THREE.Mesh(n,i)).position.x=d3.select(".particleDiv").node().clientWidth/50,s=new THREE.Points(a,l),c.position.y=-r/3,s.position.y=-r/3+1,s.position.x=d3.select(".particleDiv").node().clientWidth/50-2.2,t.add(s),t.add(c)},o.createFilterSystem=function(){var i=new THREE.PlaneGeometry(12,12),l=new THREE.MeshBasicMaterial({color:"#000000"});(a=new THREE.Mesh(i,l)).position.y=-.8,a.rotation.x=-30,r.addFolder("Slide Filter to see 2D section").add(a.position,"y",-.8,n.maxY+1).onChange(function(){t.remove(s),t.remove(c),o.createSliceSystem(a.position.y),e(a.position.y)}),t.add(a)},o.createParticleSystem=function(){for(var e=new THREE.Geometry,n=new THREE.PointsMaterial({sizeAttenuation:!1,vertexColors:!0}),c=0;c<o.data.length;c++){var a=o.data[c].X,l=o.data[c].Y,d=o.data[c].Z,m=new THREE.Vector3(a,l,d),y=o.data[c].concentration;y<1e-4?e.colors.push(new THREE.Color("#f7fcfd")):y<.001?e.colors.push(new THREE.Color("#e0ecf4")):y<.01?e.colors.push(new THREE.Color("#bfd3e6")):y<.1?e.colors.push(new THREE.Color("#9ebcda")):y<0?e.colors.push(new THREE.Color("#8c96c6")):y<1?e.colors.push(new THREE.Color("#8c6bb1")):y<10?e.colors.push(new THREE.Color("#88419d")):y<20?e.colors.push(new THREE.Color("#810f7c")):e.colors.push(new THREE.Color("#4d004b")),e.vertices.push(m)}i=new THREE.Points(e,n),t.add(i);var E=r.addFolder("Rotate Cylinder");E.add(i.rotation,"y",0,2*Math.PI).onChange(function(){s.rotation.z=i.rotation.y}),E.add(i.rotation,"x",0,2*Math.PI).onChange(function(){}),E.add(i.rotation,"z",0,2*Math.PI).onChange(function(){})},o.loadData=function(e){d3.csv(e).row(function(e){n.minX=Math.min(n.minX||Infinity,e.Points0),n.minY=Math.min(n.minY||Infinity,e.Points2),n.minZ=Math.min(n.minZ||Infinity,e.Points1),n.maxX=Math.max(n.maxX||-Infinity,e.Points0),n.maxY=Math.max(n.maxY||-Infinity,e.Points2),n.maxZ=Math.max(n.maxZ||-Infinity,e.Points1),o.data.push({concentration:Number(e.concentration),X:Number(e.Points0),Y:Number(e.Points2),Z:Number(e.Points1),U:Number(e.velocity0),V:Number(e.velocity2),W:Number(e.velocity1)})}).get(function(){o.createFilterSystem(),o.createParticleSystem(),o.createSliceSystem(a.position.y)})},o["public"]={initialize:function(e){o.loadData(e)},getParticleSystems:function(){return o.createSliceSystem(),t}},o["public"]};